/***************************

CentOS中默认安装有MariaDB，这个是MySQL的分支，但为了需要，还是要在系统中安装MySQL，而且安装完成之后可以直接覆盖掉MariaDB。

1 下载并安装MySQL官方的 Yum Repository
[root@localhost ~]# wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm
  使用上面的命令就直接下载了安装用的Yum Repository，大概25KB的样子，然后就可以直接yum安装了。

[root@localhost ~]# yum -y install mysql57-community-release-el7-10.noarch.rpm
  之后就开始安装MySQL服务器。

[root@localhost ~]# yum -y install mysql-community-server
  这步可能会花些时间，安装完成后就会覆盖掉之前的mariadb。

迁移改变数据库目录
cp -a /var/lib/mysql /data/

修改datadir和socket的值，同时添加下方红框[client] ...的代码，指定sock文件目录

# 编辑my.conf配置文件
vi /etc/my.conf 
# 按i进入编辑模式，并修改/添加红框处代码
# 按`Esc`后输入`:wq`保存并退出编辑。

[client]
default-character-set=utf8
socket=/data/mysql/mysql.sock
 
[mysql]
default-character-set=utf8
socket=/data/mysql/mysql.sock


2 MySQL数据库设置
  首先启动MySQL

[root@localhost ~]# systemctl start  mysqld.service
  查看MySQL运行状态，运行状态如图：

[root@localhost ~]# systemctl status mysqld.service

 此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码：

[root@localhost ~]# grep "password" /var/log/mysqld.log

如下命令进入数据库：

[root@localhost ~]# mysql -uroot -p
  输入初始密码，此时不能做任何事情，因为MySQL默认必须修改密码之后才能操作数据库：

mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';
密码设置12位

  这里有个问题，新密码设置的时候如果设置的过于简单会报错：

  原因是因为MySQL有密码设置的规范，具体是与validate_password_policy的值有关：
  
  如何解决ERROR 1819 (HY000): Your password does not satisfy the current policy requirements呢？ 这里直接提供解决方案文末有详细的说明

必须修改两个全局参数： 
首先，修改validate_password_policy参数的值

mysql> set global validate_password_policy=0; 
再修改密码的长度

mysql> set global validate_password_length=1;
再次执行修改密码就可以了

ALTER USER 'root'@'localhost' IDENTIFIED BY 'root123';
 
授权其他机器登陆
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'mypassword' WITH GRANT OPTION;

FLUSH  PRIVILEGES;

设置完密码就完成了

/****************************************************************************

mysql远程访问权限：GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;
rpm -e mysql　　// 普通删除模式
rpm -e --nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除
chkconfig mysqld on  //开机启动
mysqladmin -u root password 'root'　　// 通过该命令给root账号设置密码为 root

//**********************************************************************************************************
（ 1 ）最基本分区方案：

/ ：建议大小在 5GB 以上。 
swap ：即交换分区，建议大小是物理内存的 1~2 倍。



（ 2 ）进阶分区方案：
/boot ：用来存放与 Linux 系统启动有关的程序，比如启动引导装载程序等，建议大小为 100MB 。 
/ ： Linux 系统的根目录，所有的目录都挂在这个目录下面，建议大小为 5GB 以上。 
/home ：存放普通用户的数据，是普通用户的宿主目录，建议大小为剩下的空间。 
swap ：实现虚拟内存，建议大小是物理内存的 1~2 倍。



（ 3 ）高级分区方案：
/boot ：用来存放与 Linux 系统启动有关的程序，比如启动引导装载程序等，建议大小为 100MB 。 强制设为主分区
/usr ：用来存放 Linux 系统中的应用程序，其相关数据较多，建议大于 3GB 以上。 
/var ：用来存放 Linux 系统中经常变化的数据以及日志文件，建议大于 1GB 以上。 
/home ：存放普通用户的数据，是普通用户的宿主目录，建议大小为剩下的空间。 
/ ： Linux 系统的根目录，所有的目录都挂在这个目录下面，建议大小为 5GB 以上。 强制设为主分区
/tmp ：将临时盘在独立的分区，可避免在文件系统被塞满时影响到系统的稳定性。建议大小为 500MB 以上。 
swap ：实现虚拟内存，建议大小是物理内存的 1~2 倍。强制设为主分区

//********************************************
cat /etc/resolv.conf

DEVICE="eth0"
#BOOTPROTO=dhcp
BOOTPROTO=static
ONBOOT="yes"
TYPE="Ethernet"
UUID="028f6f6a-f4ce-493c-b3b7-e793cae8e724"
HWADDR=00:0C:29:08:F2:BA
IPADDR=192.168.2.250
NETMASK=255.255.255.0
GATEWAY=192.168.2.1
DNS1=192.168.2.1

//*********************************************
关闭防火墙以及selinux，解决访问samba共享无权限
chkconfig  iptables off 
setenforce 0  （修改/etc/selinux/config 文件，将SELINUX=enforcing改为SELINUX=disabled，重启机器即可）


[global]
         workgroup = WORKGROUP
         server string = My samba server
         security = user
         passdb backend = smbpasswd
         smb passwd file = /etc/samba/smbpasswd

[public]
        comment = Public Stuff
        path = /home/shenj
        public = yes
        writable = yes
        printable = no

[shenj]
         comment = home share
         path = /home/shenj
         read only = no
         user = shenj

[data]
         comment = This is share
         path = /data
         browseable = yes
         valid users = shenj
         read only = no

//*******************************************
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 修改时区

wget -r -p -np -k URL    下载一个站点

export LD_LIBRARY_PATH=/data/opt/glibc-2.14/lib:$LD_LIBRARY_PATH 临时修改环境变量

gcc g++
yum -y update gcc
yum -y install gcc+ gcc-c++

yum install libtermcap-devel ncurses-devel libevent-devel readline-devel

vpn:已换东京机房 106.185.48.226 user:vpn pass:123456 

-----------
在VM虚拟机中安装CentOS 7 时 有时候顾虑到电脑硬件性能，我们需要最小化安装，而最小化安装后与centos6的版本是有一些差异的，接下来我们就对刚安装好的最小化centos7做一些操作，来世我们使用的更得心应手。 
1. 最小化安装CentOS7，首先需要配置网络，和6系列一样

vi /etc/sysconfig/network-scripts/ifcfg-eno16777736

这里的eno16777736是你的网卡名称，（我使用的是NAT模式，桥接模式自行修改IP地址）修改文件中

ONBOOT = no 为 
ONBOOT = yes

启用你的网卡。 
桥接模式修改IP地址百度一大堆，这里不再赘述。

最小化安装CentOS7后，在配置网络后，想查看我的IP，发现 ifconfig 命令是不好使得。在最小化的CentOS7中，查看网卡信息的命令应该是
ip addr 
ip addr
查看网络统计信息是 
ip link，

ip link

为了方便起见 我们还是启用ifconfig 命令。 
首先我们看看，是哪个组件包含了ifconfig命令，用

yum provides ifconfig 
或 
yum whatprovides ifconfig 来查看

这里写图片描述 
我们可以看到 ifconfig 命令是依赖于 net-tools 软件的 ，所以我们

yum install -y net-tools

安装该软件， 好了 现在 ifconfig 是不是能正常使用了！

3.下一步我们就要关闭CentOS7自带的防火墙 firewall 启用 IPtable 
停止 Firewall

systemctl stop firewalld

关闭firewall自动启动

systemctl disable firewalld.service 
安装IPtables防火墙 
yum install -y iptables-services

修改iptables配置文件，开放以下端口 (默认开启了22端口，以便putty等软件的连接，实例开启80端口和3306端口，以便后期lamp环境使用，注：80 为Apache默认端口，3306为MySQL的默认端口）

vi /etc/sysconfig/iptables 
#添加下面三句话到默认的22端口这条规则的下面 
-A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT 
-A INPUT -m state –state NEW -m tcp -p tcp –dport 3306 -j ACCEPT

修改后的iptables配置文件：

# sample configuration for iptables service 
# you can edit this manually or use system-config-firewall 
# please do not ask us to add additional ports/services to this default configuration 
*filter 
:INPUT ACCEPT [0:0] 
:FORWARD ACCEPT [0:0] 
:OUTPUT ACCEPT [0:0] 
-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 
-A INPUT -p icmp -j ACCEPT 
-A INPUT -i lo -j ACCEPT 
-A INPUT -p tcp -m state –state NEW -m tcp –dport 22 -j ACCEPT 
-A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT 
-A INPUT -m state –state NEW -m tcp -p tcp –dport 3306 -j ACCEPT 
-A INPUT -j REJECT –reject-with icmp-host-prohibited 
-A FORWARD -j REJECT –reject-with icmp-host-prohibited 
COMMIT

重启iptables

systemctl restart iptables.service 
添加iptables开机自启项 
systemctl enable iptables.service

4.关闭SELINUX 
编辑SELINUX配置文件

vi /etc/selinux/config 
#注释掉下面两行 
#SELINUX=enforcing 
#SELINUXTYPE=targeted 
#增加一行 
SELINUX=disabled

保存，关闭

setenforce 0 
使设置启用，在这里最好重启一下系统，也可以稍后重启

5.CentOS7最小化安装后没有wget软件，但是以后我们会经常用到这个组件，所以我们安装一下

yum install -y wget

6.CentOS自带的国外源有时候会很慢，我们替换成国内的阿里源，也有很多比如163源都很好，国内很多人用，但这里我们就用阿里源做个示例，想用其他源的同学可以去百度一下。

#先进入源的目录 
cd /etc/yum.repo.d 
#备份一下官方源 
mv CentOS-Base.repo CentOS-Base.repo.bak 
#将阿里源文件下载下来 
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 
#重建源数据缓存 
yum makecache 
ok,换源完成

7.CentOS自带vi编辑器，功能没有vim强大，我么再安装一个vim编辑器

yum install -y vim-enhanced

大功告成，现在我们的最小化CentOS7已经可以得心应手的使用了！
-----------------------
-------------------------------------------------------------------------

RabbitMQ安装

需依赖到epel源，请确保已有该源,若没有则可通过以下方式安装：
wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -ivh epel-release-latest-7.noarch.rpm

# 下载rpm包
wget https://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm
 
# 从erlang-solutions中更新该包，并将erlang_solutions.repo添加到/etc/yum.repos.d
rpm -Uvh erlang-solutions-1.0-1.noarch.rpm
 
# 安装
yum install erlang


# 安装yum-versionlock
yum install yum-plugin-versionlock
 
# 禁止Erlang自动更新
yum versionlock erlang
注：默认情况下，yum似乎是不会自动更新软件的，除非安装了yum-cron这个软件或者自己写了某些自动更新脚本。如果是前者的话，我们也可以 cd /etc/yum 目录下，将yum-cron.conf中的download_updates = yes 改为 no。

安装RabbitMQ Server

从官网下载rpm包并上传到服务器上。

 wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.16/rabbitmq-server-3.7.16-1.el7.noarch.rpm

 # 导入签名
rpm --import https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc
# 或
rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
 
# 安装
yum install rabbitmq-server-3.7.16-1.el7.noarch.rpm

# 设置开启启动
chkconfig rabbitmq-server on
 
# 启动服务
systemctl start rabbitmq-server
 
#停止服务
#systemctl stop rabbitmq-server

发现刚开始的时候并没有任何配置文件。只好照着官方的介绍，到 /usr/share/doc/rabbitmq-server-3.7.16/ 目录下复制一份模板到 /etc/rabbitmq 目录下进行修改

cd /usr/share/doc/rabbitmq-server-3.7.16/
 
cp rabbitmq.config.example /etc/rabbitmq/rabbitmq.config

开启管理后台

rabbitmq自带了管理后台插件，只要开启这个插件，就可以通过浏览器查看rabbitmq的信息以及管理它。

rabbitmq-plugins enable rabbitmq_management
 
# 开放端口
firewall-cmd --add-port=15672/tcp --permanent
firewall-cmd --reload

# 添加用户
rabbitmqctl add_user 用户名 密码
 
# 赋予用户管理员角色
rabbitmqctl set_user_tags 用户 administrator

赋予‘/’目录的访问权限
rabbitmqctl  set_permissions -p / 用户 '.*' '.*' '.*'
 
 修改rabbitmq打开文件数量

使用上一步配置的用户登录进管理后台，可知rabbitmq默认的文件打开数是1024，这对消息中间件来说太低了。官方建议我们在正式环境至少配置65536，而在开发环境中配置到4096。

修改方法：
 官方方法：
 # 打开limits.conf
vim /etc/systemd/system/rabbitmq-server.service.d/limits.conf
 
# 在Service 下添加 LimitNOFILE = 300000
[Service]
LimitNOFILE = 300000
 
# 重启服务
service rabbitmq-server restart

个人成功方法：
# 打开rabbitmq-server.service，（没办法，找不到官方说的limits.conf）
vim /etc/systemd/system/multi-user.target.wants/rabbitmq-server.service
 
# 同样在Service模块下，加入LimitNOFILE = 300000
[Service]
LimitNOFILE = 300000
 
# 重启rabbitmq，访问管理后台，发现打开文件数并没有修改成功，依旧是1024
 
# 打开 sysctl.conf
vim /etc/sysctl.conf
 
# 添加：
fs.file-max = 65535
 
# 重新启动机子
reboot
 
#再次访问管理后台，发现打开数已改为300000

***********************************************************

vhost本质上是一个mini版的RabbitMQ服务器，拥有自己的队列、绑定、交换器和权限控制；

vhost通过在各个实例间提供逻辑上分离，允许你为不同应用程序安全保密地运行数据；

vhost是AMQP概念的基础，必须在连接时进行指定，RabbitMQ包含了默认vhost：“/”；

当在RabbitMQ中创建一个用户时，用户通常会被指派给至少一个vhost，并且只能访问被指派vhost内的队列、交换器和绑定，vhost之间是绝对隔离的。

vhost操作：

rabbitmqctl add_vhost [vhost_name] #创建vhost
 
rabbitmqctl delete_vhost [vhost_name] #删除vhost
 
rabbitmqctl list_vhosts #查看
 
#配置最大连接限制，0：表示不可用，-1：无限制
 
rabbitmqctl set_vhost_limits -p vhost_name '{"max-connections": 256}'
 
#配置队列最大数，-1：无限制
 
rabbitmqctl set_vhost_limits -p vhost_name '{"max-queues": 1024}'
 
*******************************************************************************

ln -s /usr/local/nodejs/bin/npm /usr/local/bin/
ln -s /usr/local/nodejs/bin/node /usr/local/bin/
